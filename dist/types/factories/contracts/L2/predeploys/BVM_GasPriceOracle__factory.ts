/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  BVM_GasPriceOracle,
  BVM_GasPriceOracleInterface,
} from "../../../../contracts/L2/predeploys/BVM_GasPriceOracle";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "ChargeUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "DecimalsUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "GasPriceUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "IsBurningUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "L1BaseFeeUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "OverheadUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "ScalarUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "IsBurning",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "charge",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "gasPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "getL1Fee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "getL1GasUsed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "l1BaseFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "overhead",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "scalar",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "sccAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_charge",
        type: "uint256",
      },
    ],
    name: "setCharge",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_decimals",
        type: "uint256",
      },
    ],
    name: "setDecimals",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_gasPrice",
        type: "uint256",
      },
    ],
    name: "setGasPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_isBurning",
        type: "uint256",
      },
    ],
    name: "setIsBurning",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_baseFee",
        type: "uint256",
      },
    ],
    name: "setL1BaseFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_overhead",
        type: "uint256",
      },
    ],
    name: "setOverhead",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_scalar",
        type: "uint256",
      },
    ],
    name: "setScalar",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161105e38038061105e83398101604081905261002f91610167565b61003833610047565b61004181610097565b50610197565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000546001600160a01b031633146100f65760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6001600160a01b03811661015b5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016100ed565b61016481610047565b50565b60006020828403121561017957600080fd5b81516001600160a01b038116811461019057600080fd5b9392505050565b610eb8806101a66000396000f3fe608060405234801561001057600080fd5b506004361061016c5760003560e01c80638da5cb5b116100cd578063ea01cd3611610081578063f45e65d811610066578063f45e65d8146102c4578063fc55b138146102cd578063fe173b97146102e057600080fd5b8063ea01cd3614610291578063f2fde38b146102b157600080fd5b8063bf1fe420116100b2578063bf1fe42014610258578063c76478321461026b578063de26c4a11461027e57600080fd5b80638da5cb5b14610206578063bede39b51461024557600080fd5b8063519b4bd311610124578063704655971161010957806370465597146101d8578063715018a6146101eb5780638c8885c8146101f357600080fd5b8063519b4bd3146101c657806355161913146101cf57600080fd5b8063313ce56711610155578063313ce567146101955780633577afc51461019e57806349948e0e146101b357600080fd5b80630c18c162146101715780630d1e43a01461018d575b600080fd5b61017a60035481565b6040519081526020015b60405180910390f35b60065461017a565b61017a60055481565b6101b16101ac366004610ad9565b6102e9565b005b61017a6101c1366004610b21565b610391565b61017a60025481565b61017a60075481565b6101b16101e6366004610ad9565b6103ed565b6101b1610489565b6101b1610201366004610ad9565b6104fc565b60005473ffffffffffffffffffffffffffffffffffffffff165b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610184565b6101b1610253366004610ad9565b610598565b6101b1610266366004610ad9565b610634565b6101b1610279366004610ad9565b6106d0565b61017a61028c366004610b21565b6107ce565b6008546102209073ffffffffffffffffffffffffffffffffffffffff1681565b6101b16102bf366004610bf0565b610872565b61017a60045481565b6101b16102db366004610ad9565b61096e565b61017a60015481565b60005473ffffffffffffffffffffffffffffffffffffffff1633146103555760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b60038190556040518181527f32740b35c0ea213650f60d44366b4fb211c9033b50714e4a1d34e65d5beb9bb4906020015b60405180910390a150565b60008061039d836107ce565b90506000600254826103af9190610c5c565b90506000600554600a6103c29190610dbb565b90506000600454836103d49190610c5c565b905060006103e28383610dc7565b979650505050505050565b60005473ffffffffffffffffffffffffffffffffffffffff1633146104545760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161034c565b60048190556040518181527f3336cd9708eaf2769a0f0dc0679f30e80f15dcd88d1921b5a16858e8b85c591a90602001610386565b60005473ffffffffffffffffffffffffffffffffffffffff1633146104f05760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161034c565b6104fa6000610a64565b565b60005473ffffffffffffffffffffffffffffffffffffffff1633146105635760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161034c565b60058190556040518181527fd68112a8707e326d08be3656b528c1bcc5bbbfc47f4177e2179b14d8640838c190602001610386565b60005473ffffffffffffffffffffffffffffffffffffffff1633146105ff5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161034c565b60028190556040518181527f351fb23757bb5ea0546c85b7996ddd7155f96b939ebaa5ff7bc49c75f27f2c4490602001610386565b60005473ffffffffffffffffffffffffffffffffffffffff16331461069b5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161034c565b60018190556040518181527ffcdccc6074c6c42e4bd578aa9870c697dc976a270968452d2b8c8dc369fae39690602001610386565b60005473ffffffffffffffffffffffffffffffffffffffff1633146107375760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161034c565b808015806107455750806001145b6107915760405162461bcd60e51b815260206004820152601c60248201527f696e76616c69642076616c75652c6d7573742062652030206f72203100000000604482015260640161034c565b60068290556040518281527fd1eaae13a99b475ddca546a1b4a45052c66c14049997f44a1731a8e7167981a7906020015b60405180910390a15050565b600080805b835181101561084b578381815181106107ee576107ee610e02565b01602001517fff000000000000000000000000000000000000000000000000000000000000001661082b57610824600483610e31565b9150610839565b610836601083610e31565b91505b8061084381610e49565b9150506107d3565b5060006003548261085c9190610e31565b905061086a81610440610e31565b949350505050565b60005473ffffffffffffffffffffffffffffffffffffffff1633146108d95760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161034c565b73ffffffffffffffffffffffffffffffffffffffff81166109625760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161034c565b61096b81610a64565b50565b60005473ffffffffffffffffffffffffffffffffffffffff1633146109d55760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161034c565b808015806109e35750806001145b610a2f5760405162461bcd60e51b815260206004820152601c60248201527f696e76616c69642076616c75652c6d7573742062652030206f72203100000000604482015260640161034c565b60078290556040518281527f49244d4195584d0644398167ca8caa7b98ee36b674e4b4d2a2640749b27eafb7906020016107c2565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600060208284031215610aeb57600080fd5b5035919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600060208284031215610b3357600080fd5b813567ffffffffffffffff80821115610b4b57600080fd5b818401915084601f830112610b5f57600080fd5b813581811115610b7157610b71610af2565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f01168101908382118183101715610bb757610bb7610af2565b81604052828152876020848701011115610bd057600080fd5b826020860160208301376000928101602001929092525095945050505050565b600060208284031215610c0257600080fd5b813573ffffffffffffffffffffffffffffffffffffffff81168114610c2657600080fd5b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610c9457610c94610c2d565b500290565b600181815b80851115610cf257817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04821115610cd857610cd8610c2d565b80851615610ce557918102915b93841c9390800290610c9e565b509250929050565b600082610d0957506001610db5565b81610d1657506000610db5565b8160018114610d2c5760028114610d3657610d52565b6001915050610db5565b60ff841115610d4757610d47610c2d565b50506001821b610db5565b5060208310610133831016604e8410600b8410161715610d75575081810a610db5565b610d7f8383610c99565b807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04821115610db157610db1610c2d565b0290505b92915050565b6000610c268383610cfa565b600082610dfd577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60008219821115610e4457610e44610c2d565b500190565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610e7b57610e7b610c2d565b506001019056fea26469706673582212207da82d9f1ffefb5ad9863297e3bb633970d9ab86e98a6bf78a4411e4ca1e9e2864736f6c63430008090033";

type BVM_GasPriceOracleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BVM_GasPriceOracleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BVM_GasPriceOracle__factory extends ContractFactory {
  constructor(...args: BVM_GasPriceOracleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _owner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BVM_GasPriceOracle> {
    return super.deploy(_owner, overrides || {}) as Promise<BVM_GasPriceOracle>;
  }
  override getDeployTransaction(
    _owner: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_owner, overrides || {});
  }
  override attach(address: string): BVM_GasPriceOracle {
    return super.attach(address) as BVM_GasPriceOracle;
  }
  override connect(signer: Signer): BVM_GasPriceOracle__factory {
    return super.connect(signer) as BVM_GasPriceOracle__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BVM_GasPriceOracleInterface {
    return new utils.Interface(_abi) as BVM_GasPriceOracleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BVM_GasPriceOracle {
    return new Contract(address, _abi, signerOrProvider) as BVM_GasPriceOracle;
  }
}
