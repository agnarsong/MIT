/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  TssRewardContract,
  TssRewardContractInterface,
} from "../../../../contracts/L2/predeploys/TssRewardContract";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_deadAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_sendAmountPerYear",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_bvmGasPriceOracleAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_l2CrossDomainMessenger",
        type: "address",
      },
      {
        internalType: "address",
        name: "_sccAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "lastBatchTime",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "batchTime",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "tssMembers",
        type: "address[]",
      },
    ],
    name: "DistributeTssReward",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "blockStartHeight",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "length",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "tssMembers",
        type: "address[]",
      },
    ],
    name: "DistributeTssRewardByBlock",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "bestBlockID",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "bvmGasPriceOracleAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_blockStartHeight",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "_length",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "_batchTime",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "_tssMembers",
        type: "address[]",
      },
    ],
    name: "claimReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "deadAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "dust",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastBatchTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "ledger",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "messenger",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "queryReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "querySendAmountPerSecond",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "sccAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "sendAmountPerYear",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_sendAmountPerYear",
        type: "uint256",
      },
    ],
    name: "setSendAmountPerYear",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_blockID",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "updateReward",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawDust",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "";

type TssRewardContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TssRewardContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TssRewardContract__factory extends ContractFactory {
  constructor(...args: TssRewardContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _deadAddress: PromiseOrValue<string>,
    _owner: PromiseOrValue<string>,
    _sendAmountPerYear: PromiseOrValue<BigNumberish>,
    _bvmGasPriceOracleAddress: PromiseOrValue<string>,
    _l2CrossDomainMessenger: PromiseOrValue<string>,
    _sccAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TssRewardContract> {
    return super.deploy(
      _deadAddress,
      _owner,
      _sendAmountPerYear,
      _bvmGasPriceOracleAddress,
      _l2CrossDomainMessenger,
      _sccAddress,
      overrides || {}
    ) as Promise<TssRewardContract>;
  }
  override getDeployTransaction(
    _deadAddress: PromiseOrValue<string>,
    _owner: PromiseOrValue<string>,
    _sendAmountPerYear: PromiseOrValue<BigNumberish>,
    _bvmGasPriceOracleAddress: PromiseOrValue<string>,
    _l2CrossDomainMessenger: PromiseOrValue<string>,
    _sccAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _deadAddress,
      _owner,
      _sendAmountPerYear,
      _bvmGasPriceOracleAddress,
      _l2CrossDomainMessenger,
      _sccAddress,
      overrides || {}
    );
  }
  override attach(address: string): TssRewardContract {
    return super.attach(address) as TssRewardContract;
  }
  override connect(signer: Signer): TssRewardContract__factory {
    return super.connect(signer) as TssRewardContract__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TssRewardContractInterface {
    return new utils.Interface(_abi) as TssRewardContractInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TssRewardContract {
    return new Contract(address, _abi, signerOrProvider) as TssRewardContract;
  }
}
