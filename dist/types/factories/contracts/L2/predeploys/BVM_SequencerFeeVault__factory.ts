/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  BVM_SequencerFeeVault,
  BVM_SequencerFeeVaultInterface,
} from "../../../../contracts/L2/predeploys/BVM_SequencerFeeVault";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_l1FeeWallet",
        type: "address",
      },
      {
        internalType: "address",
        name: "_bvmGasPriceOracleAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_burner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_minWithdrawalAmount",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "L1Gas",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "burner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "bvmGasPriceOracleAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "l1FeeWallet",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minWithdrawalAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_burner",
        type: "address",
      },
    ],
    name: "setBurner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_l1FeeWallet",
        type: "address",
      },
    ],
    name: "setL1FeeWallet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_minWithdrawalAmount",
        type: "uint256",
      },
    ],
    name: "setMinWithdrawalAmount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162000d5338038062000d538339810160408190526200003491620001d3565b6200003f3362000091565b6200004a85620000e1565b600180546001600160a01b03199081166001600160a01b0396871617909155600280548216948616949094179093556003805490931691909316179055600455506200023a565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000546001600160a01b03163314620001415760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6001600160a01b038116620001a85760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840162000138565b620001b38162000091565b50565b80516001600160a01b0381168114620001ce57600080fd5b919050565b600080600080600060a08688031215620001ec57600080fd5b620001f786620001b6565b94506200020760208701620001b6565b93506200021760408701620001b6565b92506200022760608701620001b6565b9150608086015190509295509295909350565b610b09806200024a6000396000f3fe6080604052600436106100cb5760003560e01c806385b5b14d11610074578063bfb084621161004e578063bfb084621461022d578063d4ff92181461024d578063f2fde38b1461027a57600080fd5b806385b5b14d146101c25780638da5cb5b146101e2578063a996d6ce1461020d57600080fd5b80635558979e116100a55780635558979e14610172578063715018a6146101975780638312f149146101ac57600080fd5b8063110b7eb0146100d757806327810b6e1461012e5780633ccfd60b1461015b57600080fd5b366100d257005b600080fd5b3480156100e357600080fd5b506002546101049073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b34801561013a57600080fd5b506003546101049073ffffffffffffffffffffffffffffffffffffffff1681565b34801561016757600080fd5b5061017061029a565b005b34801561017e57600080fd5b5061018962030d4081565b604051908152602001610125565b3480156101a357600080fd5b50610170610507565b3480156101b857600080fd5b5061018960045481565b3480156101ce57600080fd5b506101706101dd36600461094f565b610594565b3480156101ee57600080fd5b5060005473ffffffffffffffffffffffffffffffffffffffff16610104565b34801561021957600080fd5b50610170610228366004610968565b61061a565b34801561023957600080fd5b50610170610248366004610968565b6106e2565b34801561025957600080fd5b506001546101049073ffffffffffffffffffffffffffffffffffffffff1681565b34801561028657600080fd5b50610170610295366004610968565b6107aa565b600154600254604080517f0d1e43a0000000000000000000000000000000000000000000000000000000008152905173ffffffffffffffffffffffffffffffffffffffff9384169390921691630d1e43a091600480820192602092909190829003018186803b15801561030c57600080fd5b505afa158015610320573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061034491906109a5565b6001141561038d575060035460045473ffffffffffffffffffffffffffffffffffffffff9091169061037e90670de0b6b3a76400006109be565b4710156103885750565b61045c565b6004546103a290670de0b6b3a76400006109be565b47101561045c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152605760248201527f42564d5f53657175656e6365724665655661756c743a2077697468647261776160448201527f6c20616d6f756e74206d7573742062652067726561746572207468616e206d6960648201527f6e696d756d207769746864726177616c20616d6f756e74000000000000000000608482015260a4015b60405180910390fd5b60408051602081018252600080825291517fa3a795480000000000000000000000000000000000000000000000000000000081527342000000000000000000000000000000000000109263a3a79548926104d29273deaddeaddeaddeaddeaddeaddeaddeaddead00009287924792600401610a22565b600060405180830381600087803b1580156104ec57600080fd5b505af1158015610500573d6000803e3d6000fd5b5050505050565b60005473ffffffffffffffffffffffffffffffffffffffff163314610588576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610453565b61059260006108da565b565b60005473ffffffffffffffffffffffffffffffffffffffff163314610615576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610453565b600455565b60005473ffffffffffffffffffffffffffffffffffffffff16331461069b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610453565b600380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60005473ffffffffffffffffffffffffffffffffffffffff163314610763576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610453565b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60005473ffffffffffffffffffffffffffffffffffffffff16331461082b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610453565b73ffffffffffffffffffffffffffffffffffffffff81166108ce576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610453565b6108d7816108da565b50565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561096157600080fd5b5035919050565b60006020828403121561097a57600080fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811461099e57600080fd5b9392505050565b6000602082840312156109b757600080fd5b5051919050565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610a1d577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b500290565b600073ffffffffffffffffffffffffffffffffffffffff808816835260208188168185015286604085015263ffffffff8616606085015260a06080850152845191508160a085015260005b82811015610a895785810182015185820160c001528101610a6d565b82811115610a9b57600060c084870101525b5050601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160c001969550505050505056fea2646970667358221220b2183fcbf33cd5cb8663019340024e5a70875041f8799aeca9ffc8e7f6db0aa164736f6c63430008090033";

type BVM_SequencerFeeVaultConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BVM_SequencerFeeVaultConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BVM_SequencerFeeVault__factory extends ContractFactory {
  constructor(...args: BVM_SequencerFeeVaultConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _owner: PromiseOrValue<string>,
    _l1FeeWallet: PromiseOrValue<string>,
    _bvmGasPriceOracleAddress: PromiseOrValue<string>,
    _burner: PromiseOrValue<string>,
    _minWithdrawalAmount: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BVM_SequencerFeeVault> {
    return super.deploy(
      _owner,
      _l1FeeWallet,
      _bvmGasPriceOracleAddress,
      _burner,
      _minWithdrawalAmount,
      overrides || {}
    ) as Promise<BVM_SequencerFeeVault>;
  }
  override getDeployTransaction(
    _owner: PromiseOrValue<string>,
    _l1FeeWallet: PromiseOrValue<string>,
    _bvmGasPriceOracleAddress: PromiseOrValue<string>,
    _burner: PromiseOrValue<string>,
    _minWithdrawalAmount: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _owner,
      _l1FeeWallet,
      _bvmGasPriceOracleAddress,
      _burner,
      _minWithdrawalAmount,
      overrides || {}
    );
  }
  override attach(address: string): BVM_SequencerFeeVault {
    return super.attach(address) as BVM_SequencerFeeVault;
  }
  override connect(signer: Signer): BVM_SequencerFeeVault__factory {
    return super.connect(signer) as BVM_SequencerFeeVault__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BVM_SequencerFeeVaultInterface {
    return new utils.Interface(_abi) as BVM_SequencerFeeVaultInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BVM_SequencerFeeVault {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as BVM_SequencerFeeVault;
  }
}
