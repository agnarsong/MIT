/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  Parser,
  ParserInterface,
} from "../../../../../contracts/libraries/eigenda/Parse.sol/Parser";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "polys",
        type: "bytes[]",
      },
      {
        internalType: "uint256",
        name: "startIndex",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
    ],
    name: "parse",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061052a806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80631f944c8f14610030575b600080fd5b61004361003e3660046101f5565b610059565b60405161005091906102a7565b60405180910390f35b6060806000845b84835110156101b65760006100db8261007a602082610327565b610085906001610362565b61009090602061037a565b61009a91906103b7565b85516100a690896103b7565b848c8c888181106100b9576100b96103ce565b90506020028101906100cb91906103fd565b6100d69291506103b7565b6101c2565b9050838989858181106100f0576100f06103ce565b905060200281019061010291906103fd565b849061010e8583610362565b9261011b93929190610469565b60405160200161012d93929190610493565b60405160208183030381529060405293508351861161014c57506101b6565b88888481811061015e5761015e6103ce565b905060200281019061017091906103fd565b905061017c8284610362565b1415610198578261018c816104bb565b935050600191506101b0565b6101a3816001610362565b6101ad9083610362565b91505b50610060565b50909695505050505050565b60008284106101de578183106101d857816101ed565b826101ed565b8184106101eb57816101ed565b835b949350505050565b6000806000806060858703121561020b57600080fd5b843567ffffffffffffffff8082111561022357600080fd5b818701915087601f83011261023757600080fd5b81358181111561024657600080fd5b8860208260051b850101111561025b57600080fd5b6020928301999098509187013596604001359550909350505050565b60005b8381101561029257818101518382015260200161027a565b838111156102a1576000848401525b50505050565b60208152600082518060208401526102c6816040850160208701610277565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008261035d577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b60008219821115610375576103756102f8565b500190565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156103b2576103b26102f8565b500290565b6000828210156103c9576103c96102f8565b500390565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261043257600080fd5b83018035915067ffffffffffffffff82111561044d57600080fd5b60200191503681900382131561046257600080fd5b9250929050565b6000808585111561047957600080fd5b8386111561048657600080fd5b5050820193919092039150565b600084516104a5818460208901610277565b8201838582376000930192835250909392505050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156104ed576104ed6102f8565b506001019056fea2646970667358221220e0060da2c116b51644d69d6bdf9f636e0aaa57fa371ae983dbdd63114078757b64736f6c63430008090033";

type ParserConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ParserConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Parser__factory extends ContractFactory {
  constructor(...args: ParserConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Parser> {
    return super.deploy(overrides || {}) as Promise<Parser>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Parser {
    return super.attach(address) as Parser;
  }
  override connect(signer: Signer): Parser__factory {
    return super.connect(signer) as Parser__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ParserInterface {
    return new utils.Interface(_abi) as ParserInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Parser {
    return new Contract(address, _abi, signerOrProvider) as Parser;
  }
}
